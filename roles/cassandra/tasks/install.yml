---
- name: Create Cassandra Group
  group: name={{ _cassandra.group }} state=present


- name: Create Cassandra User
  user: name={{ _cassandra.user }} group={{ _cassandra.group }}


- name: Check Cassandra Package
  stat: path={{ _cassandra.download_path }}/{{ cassandra_package_name }}
  register: cassandra_package_exists


- name: Download Cassandra Tar file if Not Downloaded
  get_url: url={{ _cassandra.download_url }}/{{ cassandra_download_version }}/{{ cassandra_package_name }} dest={{ _cassandra.download_path }}
  when: cassandra_package_exists.stat.exists == false and _cassandra.download == true


- name: Copy Apache Cassandra Tarball from local directory, roles/cassandra/files
  copy: src={{ cassandra_package_name }} dest={{ _cassandra.download_path }}/{{ cassandra_file_name }}.{{ _cassandra.bin_type }} mode=0644 owner={{ _cassandra.user }} group={{ _cassandra.group }}
  register: local_copy_cassandra_tarball
  when: cassandra_package_exists.stat.exists == false and _cassandra.download == false


- name: Unarchive Cassandra Package
  unarchive: src={{ _cassandra.download_path }}/{{ cassandra_package_name }} dest={{ _cassandra.base_path }} copy=no


- name: Delete Package Downloaded if Needed
  file: path={{ _cassandra.download_path }}/{{ cassandra_package_name }} state=absent
  when: _cassandra.force_clean is defined and _cassandra.force_clean == "True"


- name: Check if Any Version of cassandra is Already Linked
  stat: path={{ _cassandra.base_path }}/apache-cassandra
  register: cassandra_symlink_created
- debug: msg={{ cassandra_symlink_created }}


- name: Repoint Symlink to New Cassandra Version
  become_user: root
  file:
    dest: "{{ _cassandra.base_path }}/apache-cassandra"
    src: "{{ _cassandra.base_path }}/apache-cassandra-{{ cassandra_version }}"
    state: link
  when: not cassandra_symlink_created.stat.exists


- name: Change Permission of Apache Cassandra Directory
  file:
    path: "{{ item.dir }}"
    state: "{{ item.state }}"
    # mode: "{{ item.perm }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    recurse: "{{ item.recurse }}"
  with_items:
    - { state: "directory", recurse: "yes", perm: "0755", dir: "{{ cassandra_root_dir }}", owner: "{{ _cassandra.user }}", group: "{{ _cassandra.group }}" }


- name: Create Cassandra User Hidden Directory
  file: path={{ _cassandra.user_home }}/.cassandra state=directory owner={{ _cassandra.user }} group={{ _cassandra.group }}


- name: Create Cassandra Base Data Directory
  file: path={{ _cassandra.dir.base }} state=directory owner={{ _cassandra.user }} group={{ _cassandra.group }}


- name: Create Cassandra Commit Log Directory
  file: path={{ _cassandra.dir.commit }} state=directory owner={{ _cassandra.user }} group={{ _cassandra.group }}


- name: Create Cassandra Log Directory
  file: path={{ _cassandra.dir.logs }} state=directory owner={{ _cassandra.user }} group={{ _cassandra.group }}


- name: Create Cassandra Data Directory
  file: path={{ _cassandra.dir.data }} state=directory owner={{ _cassandra.user }} group={{ _cassandra.group }}


- name: Create Cassandra CDC Raw Data Directory
  file: path={{ _cassandra.dir.data }}/cdc_raw state=directory owner={{ _cassandra.user }} group={{ _cassandra.group }}


- name: Copy Cassandra Configuration
  template: src=cassandra.yaml.j2 dest={{ cassandra_application_path }}/conf/cassandra.yaml mode=0644 owner={{ _cassandra.user }} group={{ _cassandra.group }} force=yes


- name: Copy Cassandra Env
  template: src=cassandra-env.sh.j2 dest={{ cassandra_application_path }}/conf/cassandra-env.sh mode=0755 owner={{ _cassandra.user }} group={{ _cassandra.group }} force=yes


- name: Copy Cqlsh Configuration
  template: src=cqlsh.j2 dest=/home/cassandra/.cassandra/cqlsh mode=0644 owner={{ _cassandra.user }} group={{ _cassandra.group }} force=yes


- name: Start Cassandra
  template: src=cassandra.systemd.j2 dest=/etc/systemd/system/cassandra.service owner=root group=root mode=644 force=yes


- name: Reload Systemd Daemon
  shell: "systemctl daemon-reload"
  # notify: Restart Cassandra


- name: Restart Cassandra
  service:
    name: cassandra
    state: restarted
    enabled: yes
  register: restart_cassandra
  until: restart_cassandra is succeeded
  retries: 20
  delay: 10


- name: Insert Executable Binary Path into .bashrc
  lineinfile:
    path: "{{ item }}"
    line: "export PATH={{ cassandra_application_path }}/bin:{{ cassandra_application_path }}/sbin:$PATH"
  with_items:
    - "/home/{{ _cassandra.user }}/.bashrc"
    - "/root/.bashrc"


- name: Wait Until Port 9042 Would be Up
  shell: |
    netstat -anp | grep LISTEN | grep 9042 | grep tcp | wc -l
  register: check_cassandra_port_up
  until: check_cassandra_port_up.stdout|int == 1
  retries: 20
  delay: 10
- debug: msg={{ check_cassandra_port_up }}
  when: print_debug == true


- name: Change Cassandra Password
  shell: |
    cqlsh -u cassandra -p cassandra -e "ALTER USER cassandra with PASSWORD '{{ _cassandra.password }}'"
  register: change_cassandra_passsword
  environment:
    PATH: "{{ cassandra_root_dir }}/bin:/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['master']
- debug: msg={{ change_cassandra_passsword }}
  when: print_debug == true and inventory_hostname in groups['master']

