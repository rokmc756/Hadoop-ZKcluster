---
- name: Create Zookeeper Group
  group: name=zookeeper state=present


- name: Create Zookeeper User
  user: name=zookeeper group=zookeeper


# origianal zk_package_name: zookeeper-{{ zookeeper.version }}-bin.tar.gz
- set_fact:
    zk_package_name: apache-zookeeper-{{ zookeeper.version }}-bin.tar.gz
    zk_application_path: "{{ zookeeper.installation_path }}/apache-zookeeper-{{ zookeeper.version }}-bin"


- name: Check Zookeeper Package
  stat: path={{ package_download_path }}/{{ zk_package_name }}
  register: zk_package_exists


- name: Download Zookeeper Tar File if Not Downloaded
  get_url: url={{ zookeeper.download_mirror }}/zookeeper-{{ zookeeper.version }}/{{ zk_package_name }} dest={{ package_download_path }}
  when: not zk_package_exists.stat.exists and zookeeper.download_zookeeper == true


- name: Copy Zookeeper From Local Directory, roles/zookeeper/files
  copy: src={{ zk_package_name }} dest=/tmp/{{ zk_package_name }} mode=0644 owner=zookeeper group=zookeeper
  when: not zk_package_exists.stat.exists and zookeeper.download_zookeeper == false


- name: Unarchive Zookeeper Package
  unarchive: src={{ package_download_path }}/{{ zk_package_name }} dest={{ zookeeper.installation_path }} copy=no


- name: Delete Package Downloaded If Needed
  file: path={{ package_download_path }}/{{ zk_package_name }} state=absent
  when: force_cleanup is defined and force_cleanup == "True"


- name: Check If Any Version Of Zookeeper Is Already Linked
  stat: path={{ zookeeper.installation_path }}/apache-zookeeper
  register: zk_symlink_created
- debug: msg={{ zk_symlink_created }}


- name: Repoint Symlink To New Zookeeper Version
  become_user: root
  file:
    dest: "{{ zookeeper.installation_path }}/apache-zookeeper"
    src: "{{ zookeeper.installation_path }}/apache-zookeeper-{{ zookeeper.version }}-bin"
    state: link
  when: not zk_symlink_created.stat.exists


- name: Set Zookeeper Home Directory
  become_user: root
  file: path={{ item }} state=directory owner=zookeeper group=zookeeper
  with_items:
    - "{{ zookeeper.installation_path }}/apache-zookeeper"
    - "{{ zookeeper.installation_path }}/apache-zookeeper-{{ zookeeper.version }}-bin"


- name: Set Zookeeper Data Directory
  file: path={{ zookeeper.configuration.data_dir }} state=directory owner=zookeeper group=zookeeper


- name: Set Zookeeper Log Directory
  file: path={{ zookeeper.configuration.log_path }} state=directory owner=zookeeper group=zookeeper


- name: Set Zookeeper Configuration
  template: src=templates/zookeeper.configuration.j2 dest={{ zk_application_path }}/conf/zoo.cfg force=yes
  notify: Restart Zookeeper


- name: Set Zookeeper Data Directory
  file: path={{ zookeeper.configuration.data_dir }} state=directory owner=zookeeper group=zookeeper


- name: Set Zookeeper myid Configuration
  template: src=templates/zookeeper.myid.j2 dest={{ zookeeper.configuration.data_dir }}/myid force=yes
  notify: Restart Zookeeper


- name: Start Zookeeper
  template: src=zookeeper.systemd.j2 dest=/etc/systemd/system/zookeeper.service owner=root group=root mode=644 force=yes


- name: Reload Systemd Daemon
  shell: "systemctl daemon-reload"
  notify: Restart Zookeeper

