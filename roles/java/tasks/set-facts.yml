---
- name: Get Network Interface Name from Prefix of IP Addresses
  set_fact:
    netdev0: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', hadoop.net.ipaddr0 ) | map(attribute='device') | first }}"
    netdev1: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', hadoop.net.ipaddr1 ) | map(attribute='device') | first }}"
    netdev2: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', hadoop.net.ipaddr2 ) | map(attribute='device') | first }}"


- name: Get IP Address from Network Device Name
  set_fact:
    ipaddr0: "{{ hostvars[inventory_hostname]['ansible_'~netdev0].ipv4.address }}"
    ipaddr1: "{{ hostvars[inventory_hostname]['ansible_'~netdev1].ipv4.address }}"
    ipaddr2: "{{ hostvars[inventory_hostname]['ansible_'~netdev1].ipv4.address }}"


- name: Set Default Network Device and Address
  set_fact:
    _netdev: "ansible_{{ netdev1 }}"
    _ipaddr: "{{ ipaddr1 }}"


# Set Fact for Java Packages depends on OS version.
- set_fact:
    rh_java_pkgs: "{{ rh7_java_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int <= 7
- set_fact:
    rh_java_pkgs: "{{ rh8_java_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int == 8
- set_fact:
    rh_java_pkgs: "{{ rh9_java_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int >= 9


# Set Fact for Jre Version by Alternative Java
- set_fact:
    jre_version: "{{ jdk.oss.major_version }}"
  when: jdk.oss.install == true and ( jdk.oss.major_version == 11 or jdk.oss.major_version == 17 )
- set_fact:
    jre_version: "{{ jdk.oss.major_version }}.{{ jdk.oss.minor_version }}.{{ jdk.oss.patch_version }}"
  when: jdk.oss.install == true and ( jdk.oss.major_version == 1 and jdk.oss.minor_version == 8 )
- set_fact:
    jre_version: "{{ jdk.oracle.major_version }}"
  when: jdk.oracle.install == true and ( jdk.oracle.major_version == 11 or jdk.oracle.major_version == 17 )
- set_fact:
    jre_version: "{{ jdk.oracle.major_version }}.{{ jdk.oss.minor_version }}.{{ jdk.oss.patch_version }}"
  when: jdk.oracle.install == true and ( jdk.oracle.major_version == 1 and jdk.oracle.major_version == 8 )

