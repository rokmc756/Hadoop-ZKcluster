---
- name: Start and Enable Zookeeper
  systemd:
    name: zookeeper
    state: started
    enabled: yes
  when: inventory_hostname not in groups['database']


- name: Start All Hadoop Service
  become_user: "{{ _hadoop.user }}"
  shell: |
    {{ hadoop_root_dir }}/sbin/start-all.sh
  register: start_all_hadoop_service
  args:
    executable: /bin/bash
    chdir: "{{ _hadoop.base_path }}"
  environment:
    PATH: "{{ hadoop_root_dir }}/sbin:/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['master']


- name: Leave Safemode
  become_user: "{{ _hadoop.user }}"
  shell: |
    {{ hadoop_root_dir }}/bin/hdfs dfsadmin -safemode leave
  register: leave_safemode
  args:
    executable: /bin/bash
    chdir: "{{ _hadoop.base_path }}"
  environment:
    PATH: "{{ hadoop_root_dir }}/bin:/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['master']


- name: Check Active Namenode
  become_user: "{{ _hadoop.user }}"
  shell: |
    hdfs haadmin -getAllServiceState | grep active | awk '{print $1}' | cut -d ':' -f 1
  register: check_active_namenode
  args:
    executable: /bin/bash
    chdir: "{{ _hadoop.base_path }}"
  environment:
    PATH: "{{ hadoop_root_dir }}/bin:/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['master']


- name: Switch Standby Namenode
  become_user: "{{ _hadoop.user }}"
  shell: |
    cat <<EOF | hdfs haadmin -transitionToStandby nn2 --forcemanual
    y
    EOF
  register: switch_standby_namenode
  args:
    executable: /bin/bash
    chdir: "{{ _hadoop.base_path }}"
  environment:
    PATH: "{{ hadoop_root_dir }}/bin:/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['master'] and hostvars[groups['master'][0]].ansible_hostname not in check_active_namenode.stdout


- name: Switch Active Namenode
  become_user: "{{ _hadoop.user }}"
  shell: |
    cat <<EOF | hdfs haadmin -transitionToActive nn1 --forcemanual
    y
    EOF
  register: switch_active_namenode
  args:
    executable: /bin/bash
    chdir: "{{ _hadoop.base_path }}"
  environment:
    PATH: "{{ hadoop_root_dir }}/bin:/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['master'] and hostvars[groups['master'][0]].ansible_hostname not in check_active_namenode.stdout


- name: Get All Service State
  become_user: "{{ _hadoop.user }}"
  shell: |
    hdfs haadmin -getAllServiceState
  register: get_all_service_state
  args:
    executable: /bin/bash
    chdir: "{{ _hadoop.base_path }}"
  environment:
    PATH: "{{ hadoop_root_dir }}/bin:/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['master']
- debug: msg={{ get_all_service_state }}
  when: print_debug == true and inventory_hostname in groups['master']

