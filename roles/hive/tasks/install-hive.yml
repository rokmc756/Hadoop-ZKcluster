---
- name: Check if Apache Hive Tarball File Already Exists
  stat: path={{ hive_file_name }}.{{ _hive.bin_type }}
  register: check_hive_tarball
- debug: msg={{ check_hive_tarball }}


- name: Check if Apache Hive Installation Directory Already Exists
  stat: path={{ _hive.base_path }}/{{ hive_file_name }}
  register: check_hive_install_dir


- name: Sanity check for existence of {{ hive_file_name }}.{{ _hive.bin_type }} file or {{ hive_file_name }} directory
  debug: msg="Both {{ hive_file_name }}.{{ _hive.bin_type }} file and {{ hive_file_name }} Directory Already Exists"
  changed_when: check_hive_tarball.stat.exists == True and check_hive_install_dir.stat.exists == True


- name: Download Hive Software Binaries
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
  with_items:
    - { url: "{{ _hive.download_url }}/hive-{{ hive_version }}/apache-hive-{{ hive_version }}-bin.tar.gz",
        dest: "{{ _hive.base_path }}/apache-hive-{{ hive_version }}-bin.tar.gz" }
  when: _hive.download == true and check_hive_tarball.stat.exists != True


- name: Copy Apache Hive Tarball from local directory, roles/hive/files
  copy: src={{ hive_file_name }}.{{ _hive.bin_type }} dest={{ _hive.base_path }}/{{ hive_file_name }}.{{ _hive.bin_type }} mode=0644 owner={{ _hadoop.user }} group={{ _hadoop.group }}
  register: local_copy_dss
  when: _hive.download == false and check_hive_tarball.stat.exists != True


- name: Unarchive Apache Hive Tarball
  unarchive:
    src: "{{ _hive.base_path }}/{{ hive_file_name }}.{{ _hive.bin_type }}"
    dest: "{{ _hive.base_path }}"
    owner: "{{ _hadoop.user }}"
    group: "{{ _hadoop.group }}"
    mode: "0755"
    remote_src: yes
  register: unarchive_hive_tarball
  when: check_hive_install_dir.stat.exists == false

