---
- name: Get interface name from prefix of IP Addresses provided for All Nodes
  set_fact:
    netdev0: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', postgres.net.ipaddr0 ) | map(attribute='device') | first }}"
    netdev1: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', postgres.net.ipaddr1 ) | map(attribute='device') | first }}"
    netdev2: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', postgres.net.ipaddr2 ) | map(attribute='device') | first }}"


- name: Define facts for list of packages to install or uninstall
  set_fact:
    rh_install_pkgs: "{{ rh_common_dep_pkgs ~ ',' ~ rh7_dep_pkgs ~ ',' ~ rh7_python_pkgs }}"
    rh_uninstall_pkgs: "{{ remove_rh_common_dep_pkgs ~ ',' ~ rh7_dep_pkgs ~ ',' ~ rh7_python_pkgs }}"
    yum_python_version: "/usr/bin/python2"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int <= 7


- name: Define facts for list of packages to install or uninstall
  set_fact:
    rh_install_pkgs: "{{ rh_common_dep_pkgs ~ ',' ~ rh8_dep_pkgs ~ ',' ~ rh8_python_pkgs }}"
    rh_uninstall_pkgs: "{{ remove_rh_common_dep_pkgs ~ ',' ~ rh8_dep_pkgs ~ ',' ~ rh8_python_pkgs }}"
    yum_python_version: "/usr/bin/python3"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int == 8


- name: Define facts for list of packages to install or uninstall
  set_fact:
    rh_install_pkgs: "{{ rh_common_dep_pkgs ~ ',' ~ rh9_dep_pkgs ~ ',' ~ rh9_python_pkgs }}"
    rh_uninstall_pkgs: "{{ remove_rh_common_dep_pkgs ~ ',' ~ rh9_dep_pkgs ~ ',' ~ rh9_python_pkgs }}"
    yum_python_version: "/usr/bin/python3"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int >= 9


#- name: Define fact of package names for Postgres
#  set_fact:
#    pgsql_pkg_name: "{{ common.pgsql_pkg_name }}-{{ pgsql.major_version }}.{{ pgsql.minor_version }}-{{ pgsql.patch_version }}.{{ pgsql.os_version }}"


- name: Define fact of network address
  set_fact:
    pgsql_network_range: "{{ hostvars[inventory_hostname]['ansible_'~ netdev0]['ipv4']['network'] }}/{{ ( hostvars[inventory_hostname]['ansible_'~ netdev0]['ipv4']['address'] + '/' + hostvars[inventory_hostname]['ansible_'~ netdev0]['ipv4']['netmask'] ) | ansible.utils.ipaddr('prefix') }}"


- name: Define fact of specific ip address range
  set_fact:
    pgsql_ip_addr_range: "{{ item }}"
  with_items: "{{ ansible_all_ipv4_addresses }}"
  when: "item | ansible.utils.ipaddr( pgsql_network_range )"


#- debug: msg={{ rh_install_pkgs }}
#- debug: msg={{ rh_uninstall_pkgs }}
#- debug: msg={{ pgsql_pkg_name }}
#- debug: msg={{ pgsql_network_range }}
#- debug: msg={{ pgsql_ip_addr_range }}

